CCS PCM C Compiler, Version 5.025, 63725               10-nov.-22 19:31

               Filename:   C:\Users\juand\Desktop\ejercicio 1\ej1.lst

               ROM used:   27 words (0%)
                           Largest free fragment is 2048
               RAM used:   7 (2%) at main() level
                           7 (2%) worst case
               Stack used: 0 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   004
0003:  NOP
.................... #include <16f877a.h>       // incluir libreria de el pic utilizado 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
....................  
....................  
.................... #fuses HS,NOWDT,NOPROTECT,NOPUT,NOLVP,BROWNOUT        // fusibles estandares 
....................  
.................... #use fast_io(A) 
.................... #use fast_io(b) 
....................  
.................... #define  ld0     PIN_A0  
.................... #define  ld1      PIN_A1   
.................... #define  ld2      PIN_A2  
.................... #define  ld3       PIN_A3   
.................... #define  ld4      PIN_A4   
....................  
....................  
.................... int boton1; 
.................... int boton2; 
....................  
.................... void grupo1();                                  //prototipos 
.................... void grupo2(); 
....................  
....................  
.................... void main(){                        //funcion que lee todo codigo para generar en el pic 
0004:  MOVF   03,W
0005:  ANDLW  1F
0006:  MOVWF  03
0007:  BSF    03.5
0008:  BSF    1F.0
0009:  BSF    1F.1
000A:  BSF    1F.2
000B:  BCF    1F.3
000C:  MOVLW  07
000D:  MOVWF  1C
000E:  BCF    03.7
....................  
.................... set_tris_a(0b11111111); 
000F:  MOVLW  FF
0010:  MOVWF  05
.................... set_tris_b(0b00000000); 
0011:  MOVLW  00
0012:  MOVWF  06
....................  
....................  
.................... while(true){ 
....................  
.................... output_low(ld0); 
0013:  BCF    03.5
0014:  BCF    05.0
.................... output_low(ld1); 
0015:  BCF    05.1
.................... output_low(ld2); 
0016:  BCF    05.2
.................... output_low(ld3); 
0017:  BCF    05.3
.................... output_low(ld4); 
0018:  BCF    05.4
0019:  GOTO   014
....................  
....................  
....................  
.................... //if(input(PIN_A5)==1){    
....................  //while(input(PIN_A1)==1){ 
....................  //} 
.................... //} 
....................  
....................  
.................... //else 
.................... //boton1=0; 
....................  
.................... //if(boton1==1) { 
.................... //output_high(PIN_A2); 
.................... //output_high(PIN_a1); 
.................... //} 
.................... //else 
.................... //output_low(PIN_A2); 
.................... //output_low(Pin_a1); 
....................  
....................  
.................... } 
....................  
....................  
....................  
.................... } 
....................  
001A:  SLEEP
....................  
....................  
.................... void grupo1(){ 
.................... output_high(ld0); 
.................... output_low(ld1); 
.................... output_high(ld2); 
.................... output_low(ld3); 
.................... output_high(ld4); 
.................... } 
....................  
....................  
.................... void grupo2(){ 
.................... output_high(ld0); 
.................... output_high(ld1); 
.................... output_high(ld2); 
.................... output_high(ld3); 
.................... output_high(ld4); 
.................... } 

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
